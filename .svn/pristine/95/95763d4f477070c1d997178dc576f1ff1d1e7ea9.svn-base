package kr.or.ddit.company.controller;

import java.util.HashMap;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttribute;

import kr.or.ddit.company.service.ComInfoReviewService;
import kr.or.ddit.company.service.ComInfoService;
import kr.or.ddit.company.vo.ApplyVO;
import kr.or.ddit.company.vo.ComInfoVO;
import kr.or.ddit.paging.BootstrapPaginationRenderer;
import kr.or.ddit.paging.vo.PaginationInfo;
import kr.or.ddit.paging.vo.SearchVO;
import kr.or.ddit.users.vo.InterviewReviewVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/company")
public class ComInfoReviewController {
	
	@Inject
	private ComInfoReviewService service;
	
	@Inject ComInfoService cominfoService;
	
	@GetMapping("comReviewList/{companyId}")
	public String comReviewList(
			Model model
			, @ModelAttribute("detailCondition") InterviewReviewVO detailCondition
			, @RequestParam(value = "page", required = false, defaultValue = "1") int currentPage
			, @SessionAttribute("authId") String usersId
			, @PathVariable("companyId") String companyId
	) {
		log.info("아이디 : " + usersId);
		PaginationInfo<InterviewReviewVO> paging = new PaginationInfo<>();
		paging.setDetailCondition(detailCondition); // 키워드 검색 조건
		paging.setCurrentPage(currentPage);
		Map<String, Object> variousCondition = new HashMap<>();
		variousCondition.put("usersId", usersId);
		variousCondition.put("companyId", companyId);

		paging.setVariousCondition(variousCondition);
		
		service.retrieveIntrReviewList(paging);
		
		
		ComInfoVO cominfo = cominfoService.retrieveCominfo(companyId);
		
		paging.setRenderer(new BootstrapPaginationRenderer());
		model.addAttribute("paging", paging);
		model.addAttribute("cominfo", cominfo);
		
		
		return "company/cominfo/companyReview";
	}
	
	@GetMapping("companyDetail/{companyId}/{intrevNo}")
	public String comReviewDetail(
			@PathVariable("intrevNo") String intrevNo
			, @PathVariable("companyId") String companyId
			, Model model) {
		
		InterviewReviewVO intr = service.retrieveIntrReviewDetail(intrevNo);
		ComInfoVO cominfo = cominfoService.retrieveCominfo(companyId);
		model.addAttribute("intr", intr);
		model.addAttribute("cominfo", cominfo);
		
		return "company/cominfo/companyReviewDetail";
	}

}
