package kr.or.ddit.company.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.common.enumpkg.ServiceResult;
import kr.or.ddit.company.dao.ProceduerDAO;
import kr.or.ddit.company.dao.RecruitDAO;
import kr.or.ddit.company.vo.RProcedureVO;
import kr.or.ddit.company.vo.RecruitVO;
import kr.or.ddit.company.vo.TestVO;
import kr.or.ddit.paging.vo.PaginationInfo;
import kr.or.ddit.users.vo.ScrapVO;

@Service
public class RecruitServiceImpl implements RecruitService{
	
	@Inject
	private RecruitDAO dao;
	
	@Inject
	private ProceduerDAO prodao;

	/**
	 *페이징 처리 기반의 채용공고 리스트 조회
	 */
	@Override
	public void retrieveRecruitList(PaginationInfo<RecruitVO> paging) {
		int totalRecord =dao.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		List<RecruitVO>dataList = dao.selectRecruitList(paging);
		paging.setDataList(dataList);
	}

	/**
	 *채용 공고 등록
	 */
	@Override
	public ServiceResult createRecruit(RecruitVO recruitVO) {
		int cnt = dao.createRecruit(recruitVO);
		ServiceResult result = null;
		if(cnt>0) {
			List<RProcedureVO> prodvoList = recruitVO.getRProcedure();
			
			int procnt = 0;
			
			for(RProcedureVO prodvo : prodvoList) {
				prodvo.setRcrtNo(recruitVO.getRcrtNo());
	//			prodvo.setTestNo("T000015");  //테스트 번호 하드코딩
				
				procnt += prodao.createProcedure(prodvo);
			}
			result = ServiceResult.OK;
			
		}else {
			result = ServiceResult.FAIL;
		}
		return result;
	}

	/**
	 *시험지 불러오기
	 */
	@Override
	public List<TestVO> selectTest(String id) {
		
		return dao.selectTest(id);
	}

	/**
	 *채용공고 상세조회
	 */
	@Override
	public RecruitVO retrieveRecruit(String num) {
		dao.hitRecruit(num); //조회수 증가
		return dao.selectRecruit(num);
	}

	/**
	 *채용공고 상세조회 안 채용절차
	 */
	@Override
	public List<RProcedureVO> procedureList(String num) {
		
		return dao.procedureList(num);
	}

	/**
	 *채용공고 스크랩
	 */
	@Override
	public ServiceResult scrapRecruit(ScrapVO scrap) {
		int cnt = dao.scrapRecruit(scrap);
		ServiceResult result= null;
		if(cnt>0) {
			result = ServiceResult.OK;
			
		}else {
			result = ServiceResult.FAIL;
		}
		return result;
	}

	/**
	 * 스크랩 중복방지
	 */
	@Override
	public ServiceResult scrapCheck(ScrapVO scrap) {
		int cnt = dao.scrapCheck(scrap);
		ServiceResult result= null;
		if(cnt>0) {
			result = ServiceResult.OK;
			
		}else {
			result = ServiceResult.FAIL;
		}
		return result;
	}

	/**
	 *채용공고 top100 리스트 조회
	 */
	@Override
	public List<RecruitVO> retrieveTop100List() {
		return dao.selectTop100List();
	}


}
