<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.company.dao.RecruitProcedureDAO">
	
	<!-- ==================================채용공고 목록 조회 관련==================================  -->
	<!-- 채용공고 목록 조회 sql 조각 -->
	<sql id="listSearchFlag">
		<trim prefix="where" prefixOverrides="AND">
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(variousCondition.companyId)">
				AND COMPANY_ID=#{variousCondition.companyId}
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(variousCondition.sDate)">
				<![CDATA[
				AND RCRT_DATE >= #{variousCondition.sDate}
				]]>
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(variousCondition.eDate)">
				<![CDATA[
				AND RCRT_DATE <= #{variousCondition.eDate}
				]]>
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(variousCondition.rcrtTitle)">
				AND INSTR(RCRT_TITLE, #{variousCondition.rcrtTitle}) > 0
			</if>
			<choose>
				<when test='variousCondition.tabCategory.equals("closed")' >
					<![CDATA[
					AND RCRT_EDATE < SYSDATE
					]]>
				</when>
				<otherwise>
					<![CDATA[
					AND RCRT_EDATE >= SYSDATE
					]]>
				</otherwise>
			</choose>
		</trim>
	</sql>
	
	<!-- 채용공고 목록 레코드 수 조회 -->
	<select id="selectTotalRecord" parameterType="PaginationInfo" resultType="int">
		SELECT COUNT(*) FROM RECRUIT
		<include refid="listSearchFlag" />
	</select>
	
	<!-- 채용공고 목록 조회 -->
	<select id="selectRecruitList" resultType="HashMap" parameterType="PaginationInfo">
		<!-- 총지원자 수 -->
		WITH TOTALCOUNTVIEW AS
		(
		    SELECT A.RCRT_NO, COUNT(APL_NO) TOTALCOUNT
		    FROM RECRUIT A LEFT OUTER JOIN APPLY B ON A.RCRT_NO=B.RCRT_NO
		    GROUP BY A.RCRT_NO
		)
		<!-- 현재 절차 -->
		, CURRPROCEDUREVIEW AS
		(
		    SELECT
		        X.RCRT_NO
		        , NVL((
		                SELECT RPROC_ORDER
		                FROM R_PROCEDURE
		                WHERE RPROC_ORDER=CURRNUM AND X.RCRT_NO=RCRT_NO
		            ), PREVNUM) CURRPROCEDURE
		    FROM (
		        SELECT RCRT_NO,PREVNUM, PREVNUM+1 CURRNUM
		        FROM (
		            SELECT RCRT_NO, MAX(RPROC_ORDER) PREVNUM
		            FROM (
		                SELECT A.RCRT_NO, B.RPROC_ORDER, RPROC_END
		                FROM RECRUIT A LEFT OUTER JOIN R_PROCEDURE B ON A.RCRT_NO=B.RCRT_NO
		            )
		            WHERE RPROC_END='Y'
		            GROUP BY RCRT_NO
		        )
		    ) X
		)
		
		<!-- 확인 수 -->
		, CHECKEDVIEW AS
		(
		    SELECT Y.RCRT_NO, COUNT(*) CHECKED
		    FROM (
		         <!-- 현재 절차 -->
		        SELECT
		            X.RCRT_NO
		            , NVL((
		                    SELECT RPROC_ORDER
		                    FROM R_PROCEDURE
		                    WHERE RPROC_ORDER=CURRNUM AND X.RCRT_NO=RCRT_NO
		                ), PREVNUM) CURRPROCEDURE
		        FROM (
		            SELECT RCRT_NO,PREVNUM, PREVNUM+1 CURRNUM
		            FROM (
		                SELECT RCRT_NO, MAX(RPROC_ORDER) PREVNUM
		                FROM (
		                    SELECT A.RCRT_NO, B.RPROC_ORDER, RPROC_END
		                    FROM RECRUIT A LEFT OUTER JOIN R_PROCEDURE B ON A.RCRT_NO=B.RCRT_NO
		                )
		                WHERE RPROC_END='Y'
		                GROUP BY RCRT_NO
		            )
		        ) X
		        <!-- 현재 절차 끝 -->
		    ) Y  LEFT OUTER JOIN A_PROCEDURE AP ON AP.RCRT_NO=Y.RCRT_NO
		    WHERE AP.RPROC_ORDER = Y.CURRPROCEDURE AND APROC_PASS IS NOT NULL
		    GROUP BY Y.RCRT_NO
		)
		
		<!-- 미확인 수 -->
		, UNCHECKEDVIEW AS
		(
		    SELECT Y.RCRT_NO, COUNT(*) UNCHECKED
		    FROM (
		         <!-- 현재 절차 -->
		        SELECT
		            X.RCRT_NO
		            , NVL((
		                    SELECT RPROC_ORDER
		                    FROM R_PROCEDURE
		                    WHERE RPROC_ORDER=CURRNUM AND X.RCRT_NO=RCRT_NO
		                ), PREVNUM) CURRPROCEDURE
		        FROM (
		            SELECT RCRT_NO,PREVNUM, PREVNUM+1 CURRNUM
		            FROM (
		                SELECT RCRT_NO, MAX(RPROC_ORDER) PREVNUM
		                FROM (
		                    SELECT A.RCRT_NO, B.RPROC_ORDER, RPROC_END
		                    FROM RECRUIT A LEFT OUTER JOIN R_PROCEDURE B ON A.RCRT_NO=B.RCRT_NO
		                )
		                WHERE RPROC_END='Y'
		                GROUP BY RCRT_NO
		            )
		        ) X
		        <!-- 현재 절차 끝 -->
		    ) Y  LEFT OUTER JOIN A_PROCEDURE AP ON AP.RCRT_NO=Y.RCRT_NO
		    WHERE AP.RPROC_ORDER = Y.CURRPROCEDURE AND APROC_PASS IS NULL
		    GROUP BY Y.RCRT_NO
		)
		
		<!-- 최종합격자 수 -->
		, FINALPASSVIEW AS
		(
		    SELECT F.RCRT_NO, COUNT(APL_NO) FINALPASS
		    FROM (
		            SELECT A.RCRT_NO, A.FINALORDER, B.RPROC_END
		            FROM (
		                    SELECT
		                        A.RCRT_NO, MAX(RPROC_ORDER) FINALORDER
		                    FROM
		                        RECRUIT A LEFT OUTER JOIN R_PROCEDURE B ON A.RCRT_NO = B.RCRT_NO
		                    GROUP BY A.RCRT_NO
		                ) A
		                LEFT OUTER JOIN
		                (
		                    SELECT
		                        RCRT_NO, RPROC_ORDER, RPROC_END
		                    FROM R_PROCEDURE
		                ) B
		                ON A.RCRT_NO=B.RCRT_NO AND A.FINALORDER=B.RPROC_ORDER
		            WHERE RPROC_END = 'Y'
		        ) F
		        LEFT OUTER JOIN A_PROCEDURE AP ON F.RCRT_NO=AP.RCRT_NO AND FINALORDER=RPROC_ORDER
		        WHERE AP.APROC_PASS='Y'
		        GROUP BY F.RCRT_NO
		)
		SELECT B.*
		FROM (
			SELECT ROWNUM RNUM, A.*
			FROM (
				SELECT
				    A.RCRT_NO       "rcrtNo"
				    <!-- 여기에 큰따옴표 안쓰고 rcrtNo 라고 줘버리면 오라클은 소문자를 전부 대문자로 바꿔서 프로퍼티명을 RCRTNO 이런식으로 만들어버림
				    	> 그래서 쓰는게 "" -->
				    ,COMPANY_ID     "companyId"
				    ,RCRT_TITLE     "rcrtTitle"
				    ,RCRT_HIT       "rcrtHit"
				    ,RCRT_KEYWORDNM "rcrtKeywordnm"
				    ,RCRT_FIELD     "rcrtField"
				    ,RCRT_PERSON    "rcrtPerson"
				    ,RCRT_CAREER    "rcrtCareer"
				    ,RCRT_CONDITION "rcrtCondition"
				    ,RCRT_EDU       "rcrtEdu"
				    ,RCRT_LOC       "rcrtLoc"
				    ,RCRT_TYPE      "rcrtType"
				    ,RCRT_SALARY    "rcrtSalary"
				    ,RCRT_WEEK      "rcrtWeek"
				    ,TO_CHAR(RCRT_DATE,  'YYYY-MM-DD')  "rcrtDate"
				    ,TO_CHAR(RCRT_SDATE, 'YYYY-MM-DD')  "rcrtSdate"
				    ,TO_CHAR(RCRT_EDATE, 'YYYY-MM-DD')  "rcrtEdate"
				    ,RCRT_NM        "rcrtNm"
				    ,RCRT_TEL       "rcrtTel"
				    ,RCRT_MAIL      "rcrtMail"
				    ,RCRT_WLFR      "rcrtWlfr"
				    ,RCRT_RECTYPE   "rcrtRectype"
				    ,RCRT_STIME     "rcrtStime"
				    ,RCRT_ETIME     "rcrtEtime"
				    ,RCRT_DELETE    "rcrtDelete"
				    , TOTALCOUNT    "totalCount"
				    , CURRPROCEDURE "currprocedure"
				    , CHECKED       "checked"
				    , UNCHECKED     "unchecked"
				    , FINALPASS     "finalpass"
				FROM
				    recruit A LEFT OUTER JOIN TOTALCOUNTVIEW B ON (A.RCRT_NO=B.RCRT_NO)
				        LEFT OUTER JOIN CURRPROCEDUREVIEW C ON (A.RCRT_NO=C.RCRT_NO)
				        LEFT OUTER JOIN CHECKEDVIEW D ON (A.RCRT_NO=D.RCRT_NO)
				        LEFT OUTER JOIN UNCHECKEDVIEW E ON (A.RCRT_NO=E.RCRT_NO)
				        LEFT OUTER JOIN FINALPASSVIEW F ON (A.RCRT_NO=F.RCRT_NO)
				<include refid="listSearchFlag" />
				<choose>
					<when test='variousCondition.sortCategory.equals("eDate")' >
						ORDER BY RCRT_EDATE DESC
					</when>
					<otherwise>
						ORDER BY RCRT_DATE DESC
					</otherwise>
				</choose>
			) A
		) B
		<![CDATA[
		WHERE RNUM>=#{startRow} AND RNUM<=#{endRow}
		]]>
	</select>
	
	<!-- 채용절차목록 조회 -->
	<select id="selectRecruitProcedure" parameterType="string" resultType="RProcedureVO">
		SELECT
		    RCRT_NO
		    , RPROC_ORDER
		    , RPROC_TYPENO
		    , RPROC_SDATE
		    , RPROC_EDATE
		    , RPROC_END
		    , TEST_NO
		    , COM_CODE_NM
		FROM
		    R_PROCEDURE LEFT OUTER JOIN TB_COM_CODE ON RPROC_TYPENO=COM_CODE
		WHERE
			RCRT_NO=#{rcrtNo}
		ORDER BY RPROC_ORDER ASC
	</select>
	
	<!-- 채용절차 상세조회 -->
	<select id="selectCurrentProcedureInfo" parameterType="HashMap" resultType="RProcedureVO">
		SELECT
		    RCRT_NO
		    , RPROC_ORDER
		    , RPROC_TYPENO
		    , RPROC_SDATE
		    , RPROC_EDATE
		    , RPROC_END
		    , TEST_NO
		    , COM_CODE_NM
		FROM
		    R_PROCEDURE LEFT OUTER JOIN TB_COM_CODE ON RPROC_TYPENO=COM_CODE
		WHERE
			RCRT_NO=#{rcrtNo}
			AND RPROC_ORDER=#{rprocOrder}
	</select>
	
	
	<!-- ==================================채용절차 조회 관련==================================  -->
	<sql id="viewSearchFlag">
		WHERE
		    RCRT_NO=#{rcrtNo}
		    AND RPROC_ORDER=#{rprocOrder}
		    <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(aprocPass)">
			    <choose>
			    	<when test='aprocPass.equals("pass")'>
			    		AND APROC_PASS='Y'
			    	</when>
			    	<when test='aprocPass.equals("fail")'>
			    		AND  APROC_PASS='N'
			    	</when>
			    	<otherwise>
			    		AND  APROC_PASS IS NULL
			    	</otherwise>
			    </choose>
		    </if>
		    <if test="@org.apache.commons.lang3.StringUtils@isBlank(aprocPass)">
		    	AND  APROC_PASS IS NULL
		    </if>
	</sql>
	
	<!-- 서류전형의 지원자 목록 조회 -->
	<resultMap type="AProcedureVO" id="ApplicantListMap" autoMapping="true">
		<association property="users" column="USERS" />
	</resultMap>
	<select id="selectResumeApplicantList" resultMap="ApplicantListMap" parameterType="PaginationInfo">
		WITH RESATTVIEW AS(
		    SELECT DISTINCT A.APL_NO, A.RESATT_NO, RESUME_TITLE
		    FROM APPLY A LEFT OUTER JOIN RESUME_ATTATCH R ON A.RESATT_NO=R.RESATT_NO
		)
		SELECT
		    A.apl_no
		    , rcrt_no
		    , rproc_order
		    , aproc_date
		    , aproc_pass
		    , aproc_scr
		    , USERS_ID
		    , USERS_NM
		    , USERS_BIR
		    , USERS_GEN
		    , RESUME_TITLE
		FROM
		    a_procedure A LEFT OUTER JOIN V_APPLICANTINFO B ON A.APL_NO=B.APL_NO
		        LEFT OUTER JOIN RESATTVIEW R ON A.APL_NO=R.APL_NO
		<include refid="viewSearchFlag" />
		ORDER BY APROC_DATE DESC
	</select>
	
	<!-- 적섬검사, 기술시험 지원자 목록 조회 -->
	<select id="selectTestApplicantList"  resultMap="ApplicantListMap" parameterType="PaginationInfo">
		SELECT
		    A.apl_no
		    , A.rcrt_no
		    , A.rproc_order
		    , aproc_date
		    , aproc_pass
		    , aproc_scr
		    , USERS_ID
		    , USERS_NM
		    , USERS_BIR
		    , USERS_GEN
		    , RSLT_NO
		FROM
		    a_procedure A LEFT OUTER JOIN V_APPLICANTINFO B ON A.APL_NO=B.APL_NO
		        LEFT OUTER JOIN TEST_RESULT T ON A.APL_NO=T.APL_NO AND A.RCRT_NO=T.RCRT_NO AND A.RPROC_ORDER=T.RPROC_ORDER
		<include refid="viewSearchFlag" />
		ORDER BY APROC_DATE DESC
	</select>
	
	<!-- 면접 지원자 목록 조회 -->
	<select id="selectInterviewApplicantList" resultMap="ApplicantListMap" parameterType="PaginationInfo">
		
		
		
		
		
		
		
		
		
		
	</select>
	
</mapper>